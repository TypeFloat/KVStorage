// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: calculator.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_calculator_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_calculator_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_calculator_2eproto;
namespace calculator {
class AddRequest;
struct AddRequestDefaultTypeInternal;
extern AddRequestDefaultTypeInternal _AddRequest_default_instance_;
class AddResponse;
struct AddResponseDefaultTypeInternal;
extern AddResponseDefaultTypeInternal _AddResponse_default_instance_;
class DivRequest;
struct DivRequestDefaultTypeInternal;
extern DivRequestDefaultTypeInternal _DivRequest_default_instance_;
class DivResponse;
struct DivResponseDefaultTypeInternal;
extern DivResponseDefaultTypeInternal _DivResponse_default_instance_;
class ModRequest;
struct ModRequestDefaultTypeInternal;
extern ModRequestDefaultTypeInternal _ModRequest_default_instance_;
class ModResponse;
struct ModResponseDefaultTypeInternal;
extern ModResponseDefaultTypeInternal _ModResponse_default_instance_;
class MulRequest;
struct MulRequestDefaultTypeInternal;
extern MulRequestDefaultTypeInternal _MulRequest_default_instance_;
class MulResponse;
struct MulResponseDefaultTypeInternal;
extern MulResponseDefaultTypeInternal _MulResponse_default_instance_;
class SubRequest;
struct SubRequestDefaultTypeInternal;
extern SubRequestDefaultTypeInternal _SubRequest_default_instance_;
class SubResponse;
struct SubResponseDefaultTypeInternal;
extern SubResponseDefaultTypeInternal _SubResponse_default_instance_;
}  // namespace calculator
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace calculator {

// ===================================================================


// -------------------------------------------------------------------

class SubResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.SubResponse) */ {
 public:
  inline SubResponse() : SubResponse(nullptr) {}
  ~SubResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubResponse(const SubResponse& from) : SubResponse(nullptr, from) {}
  inline SubResponse(SubResponse&& from) noexcept
      : SubResponse(nullptr, std::move(from)) {}
  inline SubResponse& operator=(const SubResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubResponse& operator=(SubResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubResponse* internal_default_instance() {
    return reinterpret_cast<const SubResponse*>(
        &_SubResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SubResponse& a, SubResponse& b) { a.Swap(&b); }
  inline void Swap(SubResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SubResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubResponse& from) { SubResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.SubResponse"; }

 protected:
  explicit SubResponse(::google::protobuf::Arena* arena);
  SubResponse(::google::protobuf::Arena* arena, const SubResponse& from);
  SubResponse(::google::protobuf::Arena* arena, SubResponse&& from) noexcept
      : SubResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDifferenceFieldNumber = 1,
  };
  // int64 difference = 1;
  void clear_difference() ;
  ::int64_t difference() const;
  void set_difference(::int64_t value);

  private:
  ::int64_t _internal_difference() const;
  void _internal_set_difference(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.SubResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubResponse& from_msg);
    ::int64_t difference_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class SubRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.SubRequest) */ {
 public:
  inline SubRequest() : SubRequest(nullptr) {}
  ~SubRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubRequest(const SubRequest& from) : SubRequest(nullptr, from) {}
  inline SubRequest(SubRequest&& from) noexcept
      : SubRequest(nullptr, std::move(from)) {}
  inline SubRequest& operator=(const SubRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubRequest& operator=(SubRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubRequest* internal_default_instance() {
    return reinterpret_cast<const SubRequest*>(
        &_SubRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SubRequest& a, SubRequest& b) { a.Swap(&b); }
  inline void Swap(SubRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SubRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubRequest& from) { SubRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.SubRequest"; }

 protected:
  explicit SubRequest(::google::protobuf::Arena* arena);
  SubRequest(::google::protobuf::Arena* arena, const SubRequest& from);
  SubRequest(::google::protobuf::Arena* arena, SubRequest&& from) noexcept
      : SubRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinuendFieldNumber = 1,
    kSubtrahendFieldNumber = 2,
  };
  // int32 minuend = 1;
  void clear_minuend() ;
  ::int32_t minuend() const;
  void set_minuend(::int32_t value);

  private:
  ::int32_t _internal_minuend() const;
  void _internal_set_minuend(::int32_t value);

  public:
  // int32 subtrahend = 2;
  void clear_subtrahend() ;
  ::int32_t subtrahend() const;
  void set_subtrahend(::int32_t value);

  private:
  ::int32_t _internal_subtrahend() const;
  void _internal_set_subtrahend(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.SubRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubRequest& from_msg);
    ::int32_t minuend_;
    ::int32_t subtrahend_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class MulResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.MulResponse) */ {
 public:
  inline MulResponse() : MulResponse(nullptr) {}
  ~MulResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MulResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MulResponse(const MulResponse& from) : MulResponse(nullptr, from) {}
  inline MulResponse(MulResponse&& from) noexcept
      : MulResponse(nullptr, std::move(from)) {}
  inline MulResponse& operator=(const MulResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MulResponse& operator=(MulResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MulResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MulResponse* internal_default_instance() {
    return reinterpret_cast<const MulResponse*>(
        &_MulResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MulResponse& a, MulResponse& b) { a.Swap(&b); }
  inline void Swap(MulResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MulResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MulResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MulResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MulResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MulResponse& from) { MulResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MulResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.MulResponse"; }

 protected:
  explicit MulResponse(::google::protobuf::Arena* arena);
  MulResponse(::google::protobuf::Arena* arena, const MulResponse& from);
  MulResponse(::google::protobuf::Arena* arena, MulResponse&& from) noexcept
      : MulResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProductFieldNumber = 1,
  };
  // int64 product = 1;
  void clear_product() ;
  ::int64_t product() const;
  void set_product(::int64_t value);

  private:
  ::int64_t _internal_product() const;
  void _internal_set_product(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.MulResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MulResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MulResponse& from_msg);
    ::int64_t product_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class MulRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.MulRequest) */ {
 public:
  inline MulRequest() : MulRequest(nullptr) {}
  ~MulRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MulRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline MulRequest(const MulRequest& from) : MulRequest(nullptr, from) {}
  inline MulRequest(MulRequest&& from) noexcept
      : MulRequest(nullptr, std::move(from)) {}
  inline MulRequest& operator=(const MulRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MulRequest& operator=(MulRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MulRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MulRequest* internal_default_instance() {
    return reinterpret_cast<const MulRequest*>(
        &_MulRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MulRequest& a, MulRequest& b) { a.Swap(&b); }
  inline void Swap(MulRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MulRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MulRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MulRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MulRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MulRequest& from) { MulRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MulRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.MulRequest"; }

 protected:
  explicit MulRequest(::google::protobuf::Arena* arena);
  MulRequest(::google::protobuf::Arena* arena, const MulRequest& from);
  MulRequest(::google::protobuf::Arena* arena, MulRequest&& from) noexcept
      : MulRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMultiplicandFieldNumber = 1,
    kMultiplierFieldNumber = 2,
  };
  // int32 multiplicand = 1;
  void clear_multiplicand() ;
  ::int32_t multiplicand() const;
  void set_multiplicand(::int32_t value);

  private:
  ::int32_t _internal_multiplicand() const;
  void _internal_set_multiplicand(::int32_t value);

  public:
  // int32 multiplier = 2;
  void clear_multiplier() ;
  ::int32_t multiplier() const;
  void set_multiplier(::int32_t value);

  private:
  ::int32_t _internal_multiplier() const;
  void _internal_set_multiplier(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.MulRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MulRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MulRequest& from_msg);
    ::int32_t multiplicand_;
    ::int32_t multiplier_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ModResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.ModResponse) */ {
 public:
  inline ModResponse() : ModResponse(nullptr) {}
  ~ModResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModResponse(const ModResponse& from) : ModResponse(nullptr, from) {}
  inline ModResponse(ModResponse&& from) noexcept
      : ModResponse(nullptr, std::move(from)) {}
  inline ModResponse& operator=(const ModResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModResponse& operator=(ModResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModResponse* internal_default_instance() {
    return reinterpret_cast<const ModResponse*>(
        &_ModResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ModResponse& a, ModResponse& b) { a.Swap(&b); }
  inline void Swap(ModResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ModResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModResponse& from) { ModResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ModResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.ModResponse"; }

 protected:
  explicit ModResponse(::google::protobuf::Arena* arena);
  ModResponse(::google::protobuf::Arena* arena, const ModResponse& from);
  ModResponse(::google::protobuf::Arena* arena, ModResponse&& from) noexcept
      : ModResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // int64 result = 1;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.ModResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ModResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModResponse& from_msg);
    ::int64_t result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class ModRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.ModRequest) */ {
 public:
  inline ModRequest() : ModRequest(nullptr) {}
  ~ModRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModRequest(const ModRequest& from) : ModRequest(nullptr, from) {}
  inline ModRequest(ModRequest&& from) noexcept
      : ModRequest(nullptr, std::move(from)) {}
  inline ModRequest& operator=(const ModRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModRequest& operator=(ModRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModRequest* internal_default_instance() {
    return reinterpret_cast<const ModRequest*>(
        &_ModRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ModRequest& a, ModRequest& b) { a.Swap(&b); }
  inline void Swap(ModRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ModRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModRequest& from) { ModRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ModRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.ModRequest"; }

 protected:
  explicit ModRequest(::google::protobuf::Arena* arena);
  ModRequest(::google::protobuf::Arena* arena, const ModRequest& from);
  ModRequest(::google::protobuf::Arena* arena, ModRequest&& from) noexcept
      : ModRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDividendFieldNumber = 1,
    kDivisorFieldNumber = 2,
  };
  // int32 dividend = 1;
  void clear_dividend() ;
  ::int32_t dividend() const;
  void set_dividend(::int32_t value);

  private:
  ::int32_t _internal_dividend() const;
  void _internal_set_dividend(::int32_t value);

  public:
  // int32 divisor = 2;
  void clear_divisor() ;
  ::int32_t divisor() const;
  void set_divisor(::int32_t value);

  private:
  ::int32_t _internal_divisor() const;
  void _internal_set_divisor(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.ModRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ModRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModRequest& from_msg);
    ::int32_t dividend_;
    ::int32_t divisor_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class DivResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.DivResponse) */ {
 public:
  inline DivResponse() : DivResponse(nullptr) {}
  ~DivResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DivResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DivResponse(const DivResponse& from) : DivResponse(nullptr, from) {}
  inline DivResponse(DivResponse&& from) noexcept
      : DivResponse(nullptr, std::move(from)) {}
  inline DivResponse& operator=(const DivResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DivResponse& operator=(DivResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DivResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DivResponse* internal_default_instance() {
    return reinterpret_cast<const DivResponse*>(
        &_DivResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(DivResponse& a, DivResponse& b) { a.Swap(&b); }
  inline void Swap(DivResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DivResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DivResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DivResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DivResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DivResponse& from) { DivResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DivResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.DivResponse"; }

 protected:
  explicit DivResponse(::google::protobuf::Arena* arena);
  DivResponse(::google::protobuf::Arena* arena, const DivResponse& from);
  DivResponse(::google::protobuf::Arena* arena, DivResponse&& from) noexcept
      : DivResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQuotientFieldNumber = 1,
  };
  // int64 quotient = 1;
  void clear_quotient() ;
  ::int64_t quotient() const;
  void set_quotient(::int64_t value);

  private:
  ::int64_t _internal_quotient() const;
  void _internal_set_quotient(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.DivResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DivResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DivResponse& from_msg);
    ::int64_t quotient_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class DivRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.DivRequest) */ {
 public:
  inline DivRequest() : DivRequest(nullptr) {}
  ~DivRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DivRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DivRequest(const DivRequest& from) : DivRequest(nullptr, from) {}
  inline DivRequest(DivRequest&& from) noexcept
      : DivRequest(nullptr, std::move(from)) {}
  inline DivRequest& operator=(const DivRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DivRequest& operator=(DivRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DivRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DivRequest* internal_default_instance() {
    return reinterpret_cast<const DivRequest*>(
        &_DivRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(DivRequest& a, DivRequest& b) { a.Swap(&b); }
  inline void Swap(DivRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DivRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DivRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DivRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DivRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DivRequest& from) { DivRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DivRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.DivRequest"; }

 protected:
  explicit DivRequest(::google::protobuf::Arena* arena);
  DivRequest(::google::protobuf::Arena* arena, const DivRequest& from);
  DivRequest(::google::protobuf::Arena* arena, DivRequest&& from) noexcept
      : DivRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDividendFieldNumber = 1,
    kDivisorFieldNumber = 2,
  };
  // int32 dividend = 1;
  void clear_dividend() ;
  ::int32_t dividend() const;
  void set_dividend(::int32_t value);

  private:
  ::int32_t _internal_dividend() const;
  void _internal_set_dividend(::int32_t value);

  public:
  // int32 divisor = 2;
  void clear_divisor() ;
  ::int32_t divisor() const;
  void set_divisor(::int32_t value);

  private:
  ::int32_t _internal_divisor() const;
  void _internal_set_divisor(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.DivRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DivRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DivRequest& from_msg);
    ::int32_t dividend_;
    ::int32_t divisor_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class AddResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.AddResponse) */ {
 public:
  inline AddResponse() : AddResponse(nullptr) {}
  ~AddResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddResponse(const AddResponse& from) : AddResponse(nullptr, from) {}
  inline AddResponse(AddResponse&& from) noexcept
      : AddResponse(nullptr, std::move(from)) {}
  inline AddResponse& operator=(const AddResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddResponse& operator=(AddResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddResponse* internal_default_instance() {
    return reinterpret_cast<const AddResponse*>(
        &_AddResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AddResponse& a, AddResponse& b) { a.Swap(&b); }
  inline void Swap(AddResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddResponse& from) { AddResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.AddResponse"; }

 protected:
  explicit AddResponse(::google::protobuf::Arena* arena);
  AddResponse(::google::protobuf::Arena* arena, const AddResponse& from);
  AddResponse(::google::protobuf::Arena* arena, AddResponse&& from) noexcept
      : AddResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSumFieldNumber = 1,
  };
  // int64 sum = 1;
  void clear_sum() ;
  ::int64_t sum() const;
  void set_sum(::int64_t value);

  private:
  ::int64_t _internal_sum() const;
  void _internal_set_sum(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.AddResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddResponse& from_msg);
    ::int64_t sum_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};
// -------------------------------------------------------------------

class AddRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:calculator.AddRequest) */ {
 public:
  inline AddRequest() : AddRequest(nullptr) {}
  ~AddRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddRequest(const AddRequest& from) : AddRequest(nullptr, from) {}
  inline AddRequest(AddRequest&& from) noexcept
      : AddRequest(nullptr, std::move(from)) {}
  inline AddRequest& operator=(const AddRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddRequest& operator=(AddRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddRequest* internal_default_instance() {
    return reinterpret_cast<const AddRequest*>(
        &_AddRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AddRequest& a, AddRequest& b) { a.Swap(&b); }
  inline void Swap(AddRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddRequest& from) { AddRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "calculator.AddRequest"; }

 protected:
  explicit AddRequest(::google::protobuf::Arena* arena);
  AddRequest(::google::protobuf::Arena* arena, const AddRequest& from);
  AddRequest(::google::protobuf::Arena* arena, AddRequest&& from) noexcept
      : AddRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddend1FieldNumber = 1,
    kAddend2FieldNumber = 2,
  };
  // int32 addend_1 = 1;
  void clear_addend_1() ;
  ::int32_t addend_1() const;
  void set_addend_1(::int32_t value);

  private:
  ::int32_t _internal_addend_1() const;
  void _internal_set_addend_1(::int32_t value);

  public:
  // int32 addend_2 = 2;
  void clear_addend_2() ;
  ::int32_t addend_2() const;
  void set_addend_2(::int32_t value);

  private:
  ::int32_t _internal_addend_2() const;
  void _internal_set_addend_2(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:calculator.AddRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddRequest& from_msg);
    ::int32_t addend_1_;
    ::int32_t addend_2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_calculator_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AddRequest

// int32 addend_1 = 1;
inline void AddRequest::clear_addend_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addend_1_ = 0;
}
inline ::int32_t AddRequest::addend_1() const {
  // @@protoc_insertion_point(field_get:calculator.AddRequest.addend_1)
  return _internal_addend_1();
}
inline void AddRequest::set_addend_1(::int32_t value) {
  _internal_set_addend_1(value);
  // @@protoc_insertion_point(field_set:calculator.AddRequest.addend_1)
}
inline ::int32_t AddRequest::_internal_addend_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addend_1_;
}
inline void AddRequest::_internal_set_addend_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addend_1_ = value;
}

// int32 addend_2 = 2;
inline void AddRequest::clear_addend_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addend_2_ = 0;
}
inline ::int32_t AddRequest::addend_2() const {
  // @@protoc_insertion_point(field_get:calculator.AddRequest.addend_2)
  return _internal_addend_2();
}
inline void AddRequest::set_addend_2(::int32_t value) {
  _internal_set_addend_2(value);
  // @@protoc_insertion_point(field_set:calculator.AddRequest.addend_2)
}
inline ::int32_t AddRequest::_internal_addend_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addend_2_;
}
inline void AddRequest::_internal_set_addend_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addend_2_ = value;
}

// -------------------------------------------------------------------

// AddResponse

// int64 sum = 1;
inline void AddResponse::clear_sum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sum_ = ::int64_t{0};
}
inline ::int64_t AddResponse::sum() const {
  // @@protoc_insertion_point(field_get:calculator.AddResponse.sum)
  return _internal_sum();
}
inline void AddResponse::set_sum(::int64_t value) {
  _internal_set_sum(value);
  // @@protoc_insertion_point(field_set:calculator.AddResponse.sum)
}
inline ::int64_t AddResponse::_internal_sum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sum_;
}
inline void AddResponse::_internal_set_sum(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sum_ = value;
}

// -------------------------------------------------------------------

// SubRequest

// int32 minuend = 1;
inline void SubRequest::clear_minuend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minuend_ = 0;
}
inline ::int32_t SubRequest::minuend() const {
  // @@protoc_insertion_point(field_get:calculator.SubRequest.minuend)
  return _internal_minuend();
}
inline void SubRequest::set_minuend(::int32_t value) {
  _internal_set_minuend(value);
  // @@protoc_insertion_point(field_set:calculator.SubRequest.minuend)
}
inline ::int32_t SubRequest::_internal_minuend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minuend_;
}
inline void SubRequest::_internal_set_minuend(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minuend_ = value;
}

// int32 subtrahend = 2;
inline void SubRequest::clear_subtrahend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subtrahend_ = 0;
}
inline ::int32_t SubRequest::subtrahend() const {
  // @@protoc_insertion_point(field_get:calculator.SubRequest.subtrahend)
  return _internal_subtrahend();
}
inline void SubRequest::set_subtrahend(::int32_t value) {
  _internal_set_subtrahend(value);
  // @@protoc_insertion_point(field_set:calculator.SubRequest.subtrahend)
}
inline ::int32_t SubRequest::_internal_subtrahend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subtrahend_;
}
inline void SubRequest::_internal_set_subtrahend(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subtrahend_ = value;
}

// -------------------------------------------------------------------

// SubResponse

// int64 difference = 1;
inline void SubResponse::clear_difference() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.difference_ = ::int64_t{0};
}
inline ::int64_t SubResponse::difference() const {
  // @@protoc_insertion_point(field_get:calculator.SubResponse.difference)
  return _internal_difference();
}
inline void SubResponse::set_difference(::int64_t value) {
  _internal_set_difference(value);
  // @@protoc_insertion_point(field_set:calculator.SubResponse.difference)
}
inline ::int64_t SubResponse::_internal_difference() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.difference_;
}
inline void SubResponse::_internal_set_difference(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.difference_ = value;
}

// -------------------------------------------------------------------

// MulRequest

// int32 multiplicand = 1;
inline void MulRequest::clear_multiplicand() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multiplicand_ = 0;
}
inline ::int32_t MulRequest::multiplicand() const {
  // @@protoc_insertion_point(field_get:calculator.MulRequest.multiplicand)
  return _internal_multiplicand();
}
inline void MulRequest::set_multiplicand(::int32_t value) {
  _internal_set_multiplicand(value);
  // @@protoc_insertion_point(field_set:calculator.MulRequest.multiplicand)
}
inline ::int32_t MulRequest::_internal_multiplicand() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.multiplicand_;
}
inline void MulRequest::_internal_set_multiplicand(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multiplicand_ = value;
}

// int32 multiplier = 2;
inline void MulRequest::clear_multiplier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multiplier_ = 0;
}
inline ::int32_t MulRequest::multiplier() const {
  // @@protoc_insertion_point(field_get:calculator.MulRequest.multiplier)
  return _internal_multiplier();
}
inline void MulRequest::set_multiplier(::int32_t value) {
  _internal_set_multiplier(value);
  // @@protoc_insertion_point(field_set:calculator.MulRequest.multiplier)
}
inline ::int32_t MulRequest::_internal_multiplier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.multiplier_;
}
inline void MulRequest::_internal_set_multiplier(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multiplier_ = value;
}

// -------------------------------------------------------------------

// MulResponse

// int64 product = 1;
inline void MulResponse::clear_product() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_ = ::int64_t{0};
}
inline ::int64_t MulResponse::product() const {
  // @@protoc_insertion_point(field_get:calculator.MulResponse.product)
  return _internal_product();
}
inline void MulResponse::set_product(::int64_t value) {
  _internal_set_product(value);
  // @@protoc_insertion_point(field_set:calculator.MulResponse.product)
}
inline ::int64_t MulResponse::_internal_product() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.product_;
}
inline void MulResponse::_internal_set_product(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.product_ = value;
}

// -------------------------------------------------------------------

// DivRequest

// int32 dividend = 1;
inline void DivRequest::clear_dividend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dividend_ = 0;
}
inline ::int32_t DivRequest::dividend() const {
  // @@protoc_insertion_point(field_get:calculator.DivRequest.dividend)
  return _internal_dividend();
}
inline void DivRequest::set_dividend(::int32_t value) {
  _internal_set_dividend(value);
  // @@protoc_insertion_point(field_set:calculator.DivRequest.dividend)
}
inline ::int32_t DivRequest::_internal_dividend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dividend_;
}
inline void DivRequest::_internal_set_dividend(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dividend_ = value;
}

// int32 divisor = 2;
inline void DivRequest::clear_divisor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.divisor_ = 0;
}
inline ::int32_t DivRequest::divisor() const {
  // @@protoc_insertion_point(field_get:calculator.DivRequest.divisor)
  return _internal_divisor();
}
inline void DivRequest::set_divisor(::int32_t value) {
  _internal_set_divisor(value);
  // @@protoc_insertion_point(field_set:calculator.DivRequest.divisor)
}
inline ::int32_t DivRequest::_internal_divisor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.divisor_;
}
inline void DivRequest::_internal_set_divisor(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.divisor_ = value;
}

// -------------------------------------------------------------------

// DivResponse

// int64 quotient = 1;
inline void DivResponse::clear_quotient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quotient_ = ::int64_t{0};
}
inline ::int64_t DivResponse::quotient() const {
  // @@protoc_insertion_point(field_get:calculator.DivResponse.quotient)
  return _internal_quotient();
}
inline void DivResponse::set_quotient(::int64_t value) {
  _internal_set_quotient(value);
  // @@protoc_insertion_point(field_set:calculator.DivResponse.quotient)
}
inline ::int64_t DivResponse::_internal_quotient() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quotient_;
}
inline void DivResponse::_internal_set_quotient(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quotient_ = value;
}

// -------------------------------------------------------------------

// ModRequest

// int32 dividend = 1;
inline void ModRequest::clear_dividend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dividend_ = 0;
}
inline ::int32_t ModRequest::dividend() const {
  // @@protoc_insertion_point(field_get:calculator.ModRequest.dividend)
  return _internal_dividend();
}
inline void ModRequest::set_dividend(::int32_t value) {
  _internal_set_dividend(value);
  // @@protoc_insertion_point(field_set:calculator.ModRequest.dividend)
}
inline ::int32_t ModRequest::_internal_dividend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dividend_;
}
inline void ModRequest::_internal_set_dividend(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dividend_ = value;
}

// int32 divisor = 2;
inline void ModRequest::clear_divisor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.divisor_ = 0;
}
inline ::int32_t ModRequest::divisor() const {
  // @@protoc_insertion_point(field_get:calculator.ModRequest.divisor)
  return _internal_divisor();
}
inline void ModRequest::set_divisor(::int32_t value) {
  _internal_set_divisor(value);
  // @@protoc_insertion_point(field_set:calculator.ModRequest.divisor)
}
inline ::int32_t ModRequest::_internal_divisor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.divisor_;
}
inline void ModRequest::_internal_set_divisor(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.divisor_ = value;
}

// -------------------------------------------------------------------

// ModResponse

// int64 result = 1;
inline void ModResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = ::int64_t{0};
}
inline ::int64_t ModResponse::result() const {
  // @@protoc_insertion_point(field_get:calculator.ModResponse.result)
  return _internal_result();
}
inline void ModResponse::set_result(::int64_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:calculator.ModResponse.result)
}
inline ::int64_t ModResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void ModResponse::_internal_set_result(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace calculator


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_calculator_2eproto_2epb_2eh
