// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: raft.proto
// Protobuf C++ Version: 5.27.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_raft_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_raft_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_raft_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_raft_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_raft_2eproto;
namespace RaftRpcProtoc {
class AppendEntriesRequest;
struct AppendEntriesRequestDefaultTypeInternal;
extern AppendEntriesRequestDefaultTypeInternal _AppendEntriesRequest_default_instance_;
class AppendEntriesResponse;
struct AppendEntriesResponseDefaultTypeInternal;
extern AppendEntriesResponseDefaultTypeInternal _AppendEntriesResponse_default_instance_;
class InstallSnapshotRequest;
struct InstallSnapshotRequestDefaultTypeInternal;
extern InstallSnapshotRequestDefaultTypeInternal _InstallSnapshotRequest_default_instance_;
class InstallSnapshotResponse;
struct InstallSnapshotResponseDefaultTypeInternal;
extern InstallSnapshotResponseDefaultTypeInternal _InstallSnapshotResponse_default_instance_;
class LogEntry;
struct LogEntryDefaultTypeInternal;
extern LogEntryDefaultTypeInternal _LogEntry_default_instance_;
class RequestVoteRequest;
struct RequestVoteRequestDefaultTypeInternal;
extern RequestVoteRequestDefaultTypeInternal _RequestVoteRequest_default_instance_;
class RequestVoteResponse;
struct RequestVoteResponseDefaultTypeInternal;
extern RequestVoteResponseDefaultTypeInternal _RequestVoteResponse_default_instance_;
}  // namespace RaftRpcProtoc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace RaftRpcProtoc {

// ===================================================================


// -------------------------------------------------------------------

class RequestVoteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RaftRpcProtoc.RequestVoteResponse) */ {
 public:
  inline RequestVoteResponse() : RequestVoteResponse(nullptr) {}
  ~RequestVoteResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVoteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestVoteResponse(const RequestVoteResponse& from) : RequestVoteResponse(nullptr, from) {}
  inline RequestVoteResponse(RequestVoteResponse&& from) noexcept
      : RequestVoteResponse(nullptr, std::move(from)) {}
  inline RequestVoteResponse& operator=(const RequestVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVoteResponse& operator=(RequestVoteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVoteResponse* internal_default_instance() {
    return reinterpret_cast<const RequestVoteResponse*>(
        &_RequestVoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RequestVoteResponse& a, RequestVoteResponse& b) { a.Swap(&b); }
  inline void Swap(RequestVoteResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVoteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVoteResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestVoteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestVoteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestVoteResponse& from) { RequestVoteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestVoteResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RaftRpcProtoc.RequestVoteResponse"; }

 protected:
  explicit RequestVoteResponse(::google::protobuf::Arena* arena);
  RequestVoteResponse(::google::protobuf::Arena* arena, const RequestVoteResponse& from);
  RequestVoteResponse(::google::protobuf::Arena* arena, RequestVoteResponse&& from) noexcept
      : RequestVoteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kVoteGrantedFieldNumber = 2,
    kVoteStateFieldNumber = 3,
  };
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // bool VoteGranted = 2;
  void clear_votegranted() ;
  bool votegranted() const;
  void set_votegranted(bool value);

  private:
  bool _internal_votegranted() const;
  void _internal_set_votegranted(bool value);

  public:
  // int32 VoteState = 3;
  void clear_votestate() ;
  ::int32_t votestate() const;
  void set_votestate(::int32_t value);

  private:
  ::int32_t _internal_votestate() const;
  void _internal_set_votestate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RaftRpcProtoc.RequestVoteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RequestVoteResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestVoteResponse& from_msg);
    ::int32_t term_;
    bool votegranted_;
    ::int32_t votestate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raft_2eproto;
};
// -------------------------------------------------------------------

class RequestVoteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RaftRpcProtoc.RequestVoteRequest) */ {
 public:
  inline RequestVoteRequest() : RequestVoteRequest(nullptr) {}
  ~RequestVoteRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestVoteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestVoteRequest(const RequestVoteRequest& from) : RequestVoteRequest(nullptr, from) {}
  inline RequestVoteRequest(RequestVoteRequest&& from) noexcept
      : RequestVoteRequest(nullptr, std::move(from)) {}
  inline RequestVoteRequest& operator=(const RequestVoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestVoteRequest& operator=(RequestVoteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestVoteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestVoteRequest* internal_default_instance() {
    return reinterpret_cast<const RequestVoteRequest*>(
        &_RequestVoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(RequestVoteRequest& a, RequestVoteRequest& b) { a.Swap(&b); }
  inline void Swap(RequestVoteRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestVoteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestVoteRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestVoteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestVoteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestVoteRequest& from) { RequestVoteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestVoteRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RaftRpcProtoc.RequestVoteRequest"; }

 protected:
  explicit RequestVoteRequest(::google::protobuf::Arena* arena);
  RequestVoteRequest(::google::protobuf::Arena* arena, const RequestVoteRequest& from);
  RequestVoteRequest(::google::protobuf::Arena* arena, RequestVoteRequest&& from) noexcept
      : RequestVoteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kCandidateIdFieldNumber = 2,
    kLastLogIndexFieldNumber = 3,
    kLastLogTermFieldNumber = 4,
  };
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 CandidateId = 2;
  void clear_candidateid() ;
  ::int32_t candidateid() const;
  void set_candidateid(::int32_t value);

  private:
  ::int32_t _internal_candidateid() const;
  void _internal_set_candidateid(::int32_t value);

  public:
  // int32 LastLogIndex = 3;
  void clear_lastlogindex() ;
  ::int32_t lastlogindex() const;
  void set_lastlogindex(::int32_t value);

  private:
  ::int32_t _internal_lastlogindex() const;
  void _internal_set_lastlogindex(::int32_t value);

  public:
  // int32 LastLogTerm = 4;
  void clear_lastlogterm() ;
  ::int32_t lastlogterm() const;
  void set_lastlogterm(::int32_t value);

  private:
  ::int32_t _internal_lastlogterm() const;
  void _internal_set_lastlogterm(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RaftRpcProtoc.RequestVoteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RequestVoteRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestVoteRequest& from_msg);
    ::int32_t term_;
    ::int32_t candidateid_;
    ::int32_t lastlogindex_;
    ::int32_t lastlogterm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raft_2eproto;
};
// -------------------------------------------------------------------

class LogEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RaftRpcProtoc.LogEntry) */ {
 public:
  inline LogEntry() : LogEntry(nullptr) {}
  ~LogEntry() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline LogEntry(const LogEntry& from) : LogEntry(nullptr, from) {}
  inline LogEntry(LogEntry&& from) noexcept
      : LogEntry(nullptr, std::move(from)) {}
  inline LogEntry& operator=(const LogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogEntry& operator=(LogEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogEntry* internal_default_instance() {
    return reinterpret_cast<const LogEntry*>(
        &_LogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LogEntry& a, LogEntry& b) { a.Swap(&b); }
  inline void Swap(LogEntry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LogEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogEntry& from) { LogEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogEntry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RaftRpcProtoc.LogEntry"; }

 protected:
  explicit LogEntry(::google::protobuf::Arena* arena);
  LogEntry(::google::protobuf::Arena* arena, const LogEntry& from);
  LogEntry(::google::protobuf::Arena* arena, LogEntry&& from) noexcept
      : LogEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommandFieldNumber = 1,
    kLogTermFieldNumber = 2,
    kLogIndexFieldNumber = 3,
  };
  // bytes Command = 1;
  void clear_command() ;
  const std::string& command() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_command(Arg_&& arg, Args_... args);
  std::string* mutable_command();
  PROTOBUF_NODISCARD std::string* release_command();
  void set_allocated_command(std::string* value);

  private:
  const std::string& _internal_command() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_command(
      const std::string& value);
  std::string* _internal_mutable_command();

  public:
  // int32 LogTerm = 2;
  void clear_logterm() ;
  ::int32_t logterm() const;
  void set_logterm(::int32_t value);

  private:
  ::int32_t _internal_logterm() const;
  void _internal_set_logterm(::int32_t value);

  public:
  // int32 LogIndex = 3;
  void clear_logindex() ;
  ::int32_t logindex() const;
  void set_logindex(::int32_t value);

  private:
  ::int32_t _internal_logindex() const;
  void _internal_set_logindex(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RaftRpcProtoc.LogEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LogEntry_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LogEntry& from_msg);
    ::google::protobuf::internal::ArenaStringPtr command_;
    ::int32_t logterm_;
    ::int32_t logindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raft_2eproto;
};
// -------------------------------------------------------------------

class InstallSnapshotResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RaftRpcProtoc.InstallSnapshotResponse) */ {
 public:
  inline InstallSnapshotResponse() : InstallSnapshotResponse(nullptr) {}
  ~InstallSnapshotResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InstallSnapshotResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline InstallSnapshotResponse(const InstallSnapshotResponse& from) : InstallSnapshotResponse(nullptr, from) {}
  inline InstallSnapshotResponse(InstallSnapshotResponse&& from) noexcept
      : InstallSnapshotResponse(nullptr, std::move(from)) {}
  inline InstallSnapshotResponse& operator=(const InstallSnapshotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstallSnapshotResponse& operator=(InstallSnapshotResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstallSnapshotResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstallSnapshotResponse* internal_default_instance() {
    return reinterpret_cast<const InstallSnapshotResponse*>(
        &_InstallSnapshotResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(InstallSnapshotResponse& a, InstallSnapshotResponse& b) { a.Swap(&b); }
  inline void Swap(InstallSnapshotResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstallSnapshotResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstallSnapshotResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<InstallSnapshotResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstallSnapshotResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InstallSnapshotResponse& from) { InstallSnapshotResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InstallSnapshotResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RaftRpcProtoc.InstallSnapshotResponse"; }

 protected:
  explicit InstallSnapshotResponse(::google::protobuf::Arena* arena);
  InstallSnapshotResponse(::google::protobuf::Arena* arena, const InstallSnapshotResponse& from);
  InstallSnapshotResponse(::google::protobuf::Arena* arena, InstallSnapshotResponse&& from) noexcept
      : InstallSnapshotResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
  };
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RaftRpcProtoc.InstallSnapshotResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InstallSnapshotResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InstallSnapshotResponse& from_msg);
    ::int32_t term_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raft_2eproto;
};
// -------------------------------------------------------------------

class InstallSnapshotRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RaftRpcProtoc.InstallSnapshotRequest) */ {
 public:
  inline InstallSnapshotRequest() : InstallSnapshotRequest(nullptr) {}
  ~InstallSnapshotRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InstallSnapshotRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline InstallSnapshotRequest(const InstallSnapshotRequest& from) : InstallSnapshotRequest(nullptr, from) {}
  inline InstallSnapshotRequest(InstallSnapshotRequest&& from) noexcept
      : InstallSnapshotRequest(nullptr, std::move(from)) {}
  inline InstallSnapshotRequest& operator=(const InstallSnapshotRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstallSnapshotRequest& operator=(InstallSnapshotRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstallSnapshotRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstallSnapshotRequest* internal_default_instance() {
    return reinterpret_cast<const InstallSnapshotRequest*>(
        &_InstallSnapshotRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(InstallSnapshotRequest& a, InstallSnapshotRequest& b) { a.Swap(&b); }
  inline void Swap(InstallSnapshotRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstallSnapshotRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstallSnapshotRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<InstallSnapshotRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstallSnapshotRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InstallSnapshotRequest& from) { InstallSnapshotRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InstallSnapshotRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RaftRpcProtoc.InstallSnapshotRequest"; }

 protected:
  explicit InstallSnapshotRequest(::google::protobuf::Arena* arena);
  InstallSnapshotRequest(::google::protobuf::Arena* arena, const InstallSnapshotRequest& from);
  InstallSnapshotRequest(::google::protobuf::Arena* arena, InstallSnapshotRequest&& from) noexcept
      : InstallSnapshotRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 5,
    kLeaderIdFieldNumber = 1,
    kTermFieldNumber = 2,
    kLastSnapShotIncludeIndexFieldNumber = 3,
    kLastSnapShotIncludeTermFieldNumber = 4,
  };
  // bytes Data = 5;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int32 LeaderId = 1;
  void clear_leaderid() ;
  ::int32_t leaderid() const;
  void set_leaderid(::int32_t value);

  private:
  ::int32_t _internal_leaderid() const;
  void _internal_set_leaderid(::int32_t value);

  public:
  // int32 Term = 2;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 LastSnapShotIncludeIndex = 3;
  void clear_lastsnapshotincludeindex() ;
  ::int32_t lastsnapshotincludeindex() const;
  void set_lastsnapshotincludeindex(::int32_t value);

  private:
  ::int32_t _internal_lastsnapshotincludeindex() const;
  void _internal_set_lastsnapshotincludeindex(::int32_t value);

  public:
  // int32 LastSnapShotIncludeTerm = 4;
  void clear_lastsnapshotincludeterm() ;
  ::int32_t lastsnapshotincludeterm() const;
  void set_lastsnapshotincludeterm(::int32_t value);

  private:
  ::int32_t _internal_lastsnapshotincludeterm() const;
  void _internal_set_lastsnapshotincludeterm(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RaftRpcProtoc.InstallSnapshotRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InstallSnapshotRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InstallSnapshotRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t leaderid_;
    ::int32_t term_;
    ::int32_t lastsnapshotincludeindex_;
    ::int32_t lastsnapshotincludeterm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raft_2eproto;
};
// -------------------------------------------------------------------

class AppendEntriesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RaftRpcProtoc.AppendEntriesResponse) */ {
 public:
  inline AppendEntriesResponse() : AppendEntriesResponse(nullptr) {}
  ~AppendEntriesResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AppendEntriesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AppendEntriesResponse(const AppendEntriesResponse& from) : AppendEntriesResponse(nullptr, from) {}
  inline AppendEntriesResponse(AppendEntriesResponse&& from) noexcept
      : AppendEntriesResponse(nullptr, std::move(from)) {}
  inline AppendEntriesResponse& operator=(const AppendEntriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendEntriesResponse& operator=(AppendEntriesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendEntriesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendEntriesResponse* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesResponse*>(
        &_AppendEntriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AppendEntriesResponse& a, AppendEntriesResponse& b) { a.Swap(&b); }
  inline void Swap(AppendEntriesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendEntriesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendEntriesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AppendEntriesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppendEntriesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AppendEntriesResponse& from) { AppendEntriesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AppendEntriesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RaftRpcProtoc.AppendEntriesResponse"; }

 protected:
  explicit AppendEntriesResponse(::google::protobuf::Arena* arena);
  AppendEntriesResponse(::google::protobuf::Arena* arena, const AppendEntriesResponse& from);
  AppendEntriesResponse(::google::protobuf::Arena* arena, AppendEntriesResponse&& from) noexcept
      : AppendEntriesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTermFieldNumber = 1,
    kSuccessFieldNumber = 2,
    kUpdateNextIndexFieldNumber = 3,
    kAppStateFieldNumber = 4,
  };
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // bool Success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // int32 UpdateNextIndex = 3;
  void clear_updatenextindex() ;
  ::int32_t updatenextindex() const;
  void set_updatenextindex(::int32_t value);

  private:
  ::int32_t _internal_updatenextindex() const;
  void _internal_set_updatenextindex(::int32_t value);

  public:
  // int32 AppState = 4;
  void clear_appstate() ;
  ::int32_t appstate() const;
  void set_appstate(::int32_t value);

  private:
  ::int32_t _internal_appstate() const;
  void _internal_set_appstate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RaftRpcProtoc.AppendEntriesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AppendEntriesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AppendEntriesResponse& from_msg);
    ::int32_t term_;
    bool success_;
    ::int32_t updatenextindex_;
    ::int32_t appstate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raft_2eproto;
};
// -------------------------------------------------------------------

class AppendEntriesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:RaftRpcProtoc.AppendEntriesRequest) */ {
 public:
  inline AppendEntriesRequest() : AppendEntriesRequest(nullptr) {}
  ~AppendEntriesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AppendEntriesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AppendEntriesRequest(const AppendEntriesRequest& from) : AppendEntriesRequest(nullptr, from) {}
  inline AppendEntriesRequest(AppendEntriesRequest&& from) noexcept
      : AppendEntriesRequest(nullptr, std::move(from)) {}
  inline AppendEntriesRequest& operator=(const AppendEntriesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppendEntriesRequest& operator=(AppendEntriesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppendEntriesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppendEntriesRequest* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesRequest*>(
        &_AppendEntriesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AppendEntriesRequest& a, AppendEntriesRequest& b) { a.Swap(&b); }
  inline void Swap(AppendEntriesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppendEntriesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppendEntriesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AppendEntriesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppendEntriesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AppendEntriesRequest& from) { AppendEntriesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AppendEntriesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "RaftRpcProtoc.AppendEntriesRequest"; }

 protected:
  explicit AppendEntriesRequest(::google::protobuf::Arena* arena);
  AppendEntriesRequest(::google::protobuf::Arena* arena, const AppendEntriesRequest& from);
  AppendEntriesRequest(::google::protobuf::Arena* arena, AppendEntriesRequest&& from) noexcept
      : AppendEntriesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 5,
    kTermFieldNumber = 1,
    kLeaderIdFieldNumber = 2,
    kPrevLogIndexFieldNumber = 3,
    kPrevLogTermFieldNumber = 4,
    kLeaderCommitFieldNumber = 6,
  };
  // repeated .RaftRpcProtoc.LogEntry Entries = 5;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::RaftRpcProtoc::LogEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::RaftRpcProtoc::LogEntry>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::RaftRpcProtoc::LogEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::RaftRpcProtoc::LogEntry>* _internal_mutable_entries();
  public:
  const ::RaftRpcProtoc::LogEntry& entries(int index) const;
  ::RaftRpcProtoc::LogEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField<::RaftRpcProtoc::LogEntry>& entries() const;
  // int32 Term = 1;
  void clear_term() ;
  ::int32_t term() const;
  void set_term(::int32_t value);

  private:
  ::int32_t _internal_term() const;
  void _internal_set_term(::int32_t value);

  public:
  // int32 LeaderId = 2;
  void clear_leaderid() ;
  ::int32_t leaderid() const;
  void set_leaderid(::int32_t value);

  private:
  ::int32_t _internal_leaderid() const;
  void _internal_set_leaderid(::int32_t value);

  public:
  // int32 PrevLogIndex = 3;
  void clear_prevlogindex() ;
  ::int32_t prevlogindex() const;
  void set_prevlogindex(::int32_t value);

  private:
  ::int32_t _internal_prevlogindex() const;
  void _internal_set_prevlogindex(::int32_t value);

  public:
  // int32 PrevLogTerm = 4;
  void clear_prevlogterm() ;
  ::int32_t prevlogterm() const;
  void set_prevlogterm(::int32_t value);

  private:
  ::int32_t _internal_prevlogterm() const;
  void _internal_set_prevlogterm(::int32_t value);

  public:
  // int32 LeaderCommit = 6;
  void clear_leadercommit() ;
  ::int32_t leadercommit() const;
  void set_leadercommit(::int32_t value);

  private:
  ::int32_t _internal_leadercommit() const;
  void _internal_set_leadercommit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RaftRpcProtoc.AppendEntriesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AppendEntriesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AppendEntriesRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::RaftRpcProtoc::LogEntry > entries_;
    ::int32_t term_;
    ::int32_t leaderid_;
    ::int32_t prevlogindex_;
    ::int32_t prevlogterm_;
    ::int32_t leadercommit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_raft_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LogEntry

// bytes Command = 1;
inline void LogEntry::clear_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.command_.ClearToEmpty();
}
inline const std::string& LogEntry::command() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.LogEntry.Command)
  return _internal_command();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogEntry::set_command(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.command_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.LogEntry.Command)
}
inline std::string* LogEntry::mutable_command() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:RaftRpcProtoc.LogEntry.Command)
  return _s;
}
inline const std::string& LogEntry::_internal_command() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.command_.Get();
}
inline void LogEntry::_internal_set_command(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.command_.Set(value, GetArena());
}
inline std::string* LogEntry::_internal_mutable_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.command_.Mutable( GetArena());
}
inline std::string* LogEntry::release_command() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RaftRpcProtoc.LogEntry.Command)
  return _impl_.command_.Release();
}
inline void LogEntry::set_allocated_command(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.command_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.command_.IsDefault()) {
          _impl_.command_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:RaftRpcProtoc.LogEntry.Command)
}

// int32 LogTerm = 2;
inline void LogEntry::clear_logterm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logterm_ = 0;
}
inline ::int32_t LogEntry::logterm() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.LogEntry.LogTerm)
  return _internal_logterm();
}
inline void LogEntry::set_logterm(::int32_t value) {
  _internal_set_logterm(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.LogEntry.LogTerm)
}
inline ::int32_t LogEntry::_internal_logterm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logterm_;
}
inline void LogEntry::_internal_set_logterm(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logterm_ = value;
}

// int32 LogIndex = 3;
inline void LogEntry::clear_logindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logindex_ = 0;
}
inline ::int32_t LogEntry::logindex() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.LogEntry.LogIndex)
  return _internal_logindex();
}
inline void LogEntry::set_logindex(::int32_t value) {
  _internal_set_logindex(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.LogEntry.LogIndex)
}
inline ::int32_t LogEntry::_internal_logindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.logindex_;
}
inline void LogEntry::_internal_set_logindex(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.logindex_ = value;
}

// -------------------------------------------------------------------

// AppendEntriesRequest

// int32 Term = 1;
inline void AppendEntriesRequest::clear_term() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = 0;
}
inline ::int32_t AppendEntriesRequest::term() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesRequest.Term)
  return _internal_term();
}
inline void AppendEntriesRequest::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesRequest.Term)
}
inline ::int32_t AppendEntriesRequest::_internal_term() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.term_;
}
inline void AppendEntriesRequest::_internal_set_term(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = value;
}

// int32 LeaderId = 2;
inline void AppendEntriesRequest::clear_leaderid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leaderid_ = 0;
}
inline ::int32_t AppendEntriesRequest::leaderid() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesRequest.LeaderId)
  return _internal_leaderid();
}
inline void AppendEntriesRequest::set_leaderid(::int32_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesRequest.LeaderId)
}
inline ::int32_t AppendEntriesRequest::_internal_leaderid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leaderid_;
}
inline void AppendEntriesRequest::_internal_set_leaderid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leaderid_ = value;
}

// int32 PrevLogIndex = 3;
inline void AppendEntriesRequest::clear_prevlogindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prevlogindex_ = 0;
}
inline ::int32_t AppendEntriesRequest::prevlogindex() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesRequest.PrevLogIndex)
  return _internal_prevlogindex();
}
inline void AppendEntriesRequest::set_prevlogindex(::int32_t value) {
  _internal_set_prevlogindex(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesRequest.PrevLogIndex)
}
inline ::int32_t AppendEntriesRequest::_internal_prevlogindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prevlogindex_;
}
inline void AppendEntriesRequest::_internal_set_prevlogindex(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prevlogindex_ = value;
}

// int32 PrevLogTerm = 4;
inline void AppendEntriesRequest::clear_prevlogterm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prevlogterm_ = 0;
}
inline ::int32_t AppendEntriesRequest::prevlogterm() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesRequest.PrevLogTerm)
  return _internal_prevlogterm();
}
inline void AppendEntriesRequest::set_prevlogterm(::int32_t value) {
  _internal_set_prevlogterm(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesRequest.PrevLogTerm)
}
inline ::int32_t AppendEntriesRequest::_internal_prevlogterm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prevlogterm_;
}
inline void AppendEntriesRequest::_internal_set_prevlogterm(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prevlogterm_ = value;
}

// repeated .RaftRpcProtoc.LogEntry Entries = 5;
inline int AppendEntriesRequest::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int AppendEntriesRequest::entries_size() const {
  return _internal_entries_size();
}
inline void AppendEntriesRequest::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::RaftRpcProtoc::LogEntry* AppendEntriesRequest::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:RaftRpcProtoc.AppendEntriesRequest.Entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::RaftRpcProtoc::LogEntry>* AppendEntriesRequest::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:RaftRpcProtoc.AppendEntriesRequest.Entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::RaftRpcProtoc::LogEntry& AppendEntriesRequest::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesRequest.Entries)
  return _internal_entries().Get(index);
}
inline ::RaftRpcProtoc::LogEntry* AppendEntriesRequest::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::RaftRpcProtoc::LogEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:RaftRpcProtoc.AppendEntriesRequest.Entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::RaftRpcProtoc::LogEntry>& AppendEntriesRequest::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:RaftRpcProtoc.AppendEntriesRequest.Entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::RaftRpcProtoc::LogEntry>&
AppendEntriesRequest::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::RaftRpcProtoc::LogEntry>*
AppendEntriesRequest::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// int32 LeaderCommit = 6;
inline void AppendEntriesRequest::clear_leadercommit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leadercommit_ = 0;
}
inline ::int32_t AppendEntriesRequest::leadercommit() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesRequest.LeaderCommit)
  return _internal_leadercommit();
}
inline void AppendEntriesRequest::set_leadercommit(::int32_t value) {
  _internal_set_leadercommit(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesRequest.LeaderCommit)
}
inline ::int32_t AppendEntriesRequest::_internal_leadercommit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leadercommit_;
}
inline void AppendEntriesRequest::_internal_set_leadercommit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leadercommit_ = value;
}

// -------------------------------------------------------------------

// AppendEntriesResponse

// int32 Term = 1;
inline void AppendEntriesResponse::clear_term() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = 0;
}
inline ::int32_t AppendEntriesResponse::term() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesResponse.Term)
  return _internal_term();
}
inline void AppendEntriesResponse::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesResponse.Term)
}
inline ::int32_t AppendEntriesResponse::_internal_term() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.term_;
}
inline void AppendEntriesResponse::_internal_set_term(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = value;
}

// bool Success = 2;
inline void AppendEntriesResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool AppendEntriesResponse::success() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesResponse.Success)
  return _internal_success();
}
inline void AppendEntriesResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesResponse.Success)
}
inline bool AppendEntriesResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void AppendEntriesResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// int32 UpdateNextIndex = 3;
inline void AppendEntriesResponse::clear_updatenextindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatenextindex_ = 0;
}
inline ::int32_t AppendEntriesResponse::updatenextindex() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesResponse.UpdateNextIndex)
  return _internal_updatenextindex();
}
inline void AppendEntriesResponse::set_updatenextindex(::int32_t value) {
  _internal_set_updatenextindex(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesResponse.UpdateNextIndex)
}
inline ::int32_t AppendEntriesResponse::_internal_updatenextindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updatenextindex_;
}
inline void AppendEntriesResponse::_internal_set_updatenextindex(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updatenextindex_ = value;
}

// int32 AppState = 4;
inline void AppendEntriesResponse::clear_appstate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appstate_ = 0;
}
inline ::int32_t AppendEntriesResponse::appstate() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.AppendEntriesResponse.AppState)
  return _internal_appstate();
}
inline void AppendEntriesResponse::set_appstate(::int32_t value) {
  _internal_set_appstate(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.AppendEntriesResponse.AppState)
}
inline ::int32_t AppendEntriesResponse::_internal_appstate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appstate_;
}
inline void AppendEntriesResponse::_internal_set_appstate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appstate_ = value;
}

// -------------------------------------------------------------------

// RequestVoteRequest

// int32 Term = 1;
inline void RequestVoteRequest::clear_term() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = 0;
}
inline ::int32_t RequestVoteRequest::term() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.RequestVoteRequest.Term)
  return _internal_term();
}
inline void RequestVoteRequest::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.RequestVoteRequest.Term)
}
inline ::int32_t RequestVoteRequest::_internal_term() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.term_;
}
inline void RequestVoteRequest::_internal_set_term(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = value;
}

// int32 CandidateId = 2;
inline void RequestVoteRequest::clear_candidateid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.candidateid_ = 0;
}
inline ::int32_t RequestVoteRequest::candidateid() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.RequestVoteRequest.CandidateId)
  return _internal_candidateid();
}
inline void RequestVoteRequest::set_candidateid(::int32_t value) {
  _internal_set_candidateid(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.RequestVoteRequest.CandidateId)
}
inline ::int32_t RequestVoteRequest::_internal_candidateid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.candidateid_;
}
inline void RequestVoteRequest::_internal_set_candidateid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.candidateid_ = value;
}

// int32 LastLogIndex = 3;
inline void RequestVoteRequest::clear_lastlogindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindex_ = 0;
}
inline ::int32_t RequestVoteRequest::lastlogindex() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.RequestVoteRequest.LastLogIndex)
  return _internal_lastlogindex();
}
inline void RequestVoteRequest::set_lastlogindex(::int32_t value) {
  _internal_set_lastlogindex(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.RequestVoteRequest.LastLogIndex)
}
inline ::int32_t RequestVoteRequest::_internal_lastlogindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastlogindex_;
}
inline void RequestVoteRequest::_internal_set_lastlogindex(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogindex_ = value;
}

// int32 LastLogTerm = 4;
inline void RequestVoteRequest::clear_lastlogterm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogterm_ = 0;
}
inline ::int32_t RequestVoteRequest::lastlogterm() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.RequestVoteRequest.LastLogTerm)
  return _internal_lastlogterm();
}
inline void RequestVoteRequest::set_lastlogterm(::int32_t value) {
  _internal_set_lastlogterm(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.RequestVoteRequest.LastLogTerm)
}
inline ::int32_t RequestVoteRequest::_internal_lastlogterm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastlogterm_;
}
inline void RequestVoteRequest::_internal_set_lastlogterm(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastlogterm_ = value;
}

// -------------------------------------------------------------------

// RequestVoteResponse

// int32 Term = 1;
inline void RequestVoteResponse::clear_term() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = 0;
}
inline ::int32_t RequestVoteResponse::term() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.RequestVoteResponse.Term)
  return _internal_term();
}
inline void RequestVoteResponse::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.RequestVoteResponse.Term)
}
inline ::int32_t RequestVoteResponse::_internal_term() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.term_;
}
inline void RequestVoteResponse::_internal_set_term(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = value;
}

// bool VoteGranted = 2;
inline void RequestVoteResponse::clear_votegranted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.votegranted_ = false;
}
inline bool RequestVoteResponse::votegranted() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.RequestVoteResponse.VoteGranted)
  return _internal_votegranted();
}
inline void RequestVoteResponse::set_votegranted(bool value) {
  _internal_set_votegranted(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.RequestVoteResponse.VoteGranted)
}
inline bool RequestVoteResponse::_internal_votegranted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.votegranted_;
}
inline void RequestVoteResponse::_internal_set_votegranted(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.votegranted_ = value;
}

// int32 VoteState = 3;
inline void RequestVoteResponse::clear_votestate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.votestate_ = 0;
}
inline ::int32_t RequestVoteResponse::votestate() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.RequestVoteResponse.VoteState)
  return _internal_votestate();
}
inline void RequestVoteResponse::set_votestate(::int32_t value) {
  _internal_set_votestate(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.RequestVoteResponse.VoteState)
}
inline ::int32_t RequestVoteResponse::_internal_votestate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.votestate_;
}
inline void RequestVoteResponse::_internal_set_votestate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.votestate_ = value;
}

// -------------------------------------------------------------------

// InstallSnapshotRequest

// int32 LeaderId = 1;
inline void InstallSnapshotRequest::clear_leaderid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leaderid_ = 0;
}
inline ::int32_t InstallSnapshotRequest::leaderid() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.InstallSnapshotRequest.LeaderId)
  return _internal_leaderid();
}
inline void InstallSnapshotRequest::set_leaderid(::int32_t value) {
  _internal_set_leaderid(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.InstallSnapshotRequest.LeaderId)
}
inline ::int32_t InstallSnapshotRequest::_internal_leaderid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leaderid_;
}
inline void InstallSnapshotRequest::_internal_set_leaderid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leaderid_ = value;
}

// int32 Term = 2;
inline void InstallSnapshotRequest::clear_term() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = 0;
}
inline ::int32_t InstallSnapshotRequest::term() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.InstallSnapshotRequest.Term)
  return _internal_term();
}
inline void InstallSnapshotRequest::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.InstallSnapshotRequest.Term)
}
inline ::int32_t InstallSnapshotRequest::_internal_term() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.term_;
}
inline void InstallSnapshotRequest::_internal_set_term(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = value;
}

// int32 LastSnapShotIncludeIndex = 3;
inline void InstallSnapshotRequest::clear_lastsnapshotincludeindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastsnapshotincludeindex_ = 0;
}
inline ::int32_t InstallSnapshotRequest::lastsnapshotincludeindex() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.InstallSnapshotRequest.LastSnapShotIncludeIndex)
  return _internal_lastsnapshotincludeindex();
}
inline void InstallSnapshotRequest::set_lastsnapshotincludeindex(::int32_t value) {
  _internal_set_lastsnapshotincludeindex(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.InstallSnapshotRequest.LastSnapShotIncludeIndex)
}
inline ::int32_t InstallSnapshotRequest::_internal_lastsnapshotincludeindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastsnapshotincludeindex_;
}
inline void InstallSnapshotRequest::_internal_set_lastsnapshotincludeindex(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastsnapshotincludeindex_ = value;
}

// int32 LastSnapShotIncludeTerm = 4;
inline void InstallSnapshotRequest::clear_lastsnapshotincludeterm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastsnapshotincludeterm_ = 0;
}
inline ::int32_t InstallSnapshotRequest::lastsnapshotincludeterm() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.InstallSnapshotRequest.LastSnapShotIncludeTerm)
  return _internal_lastsnapshotincludeterm();
}
inline void InstallSnapshotRequest::set_lastsnapshotincludeterm(::int32_t value) {
  _internal_set_lastsnapshotincludeterm(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.InstallSnapshotRequest.LastSnapShotIncludeTerm)
}
inline ::int32_t InstallSnapshotRequest::_internal_lastsnapshotincludeterm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastsnapshotincludeterm_;
}
inline void InstallSnapshotRequest::_internal_set_lastsnapshotincludeterm(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastsnapshotincludeterm_ = value;
}

// bytes Data = 5;
inline void InstallSnapshotRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InstallSnapshotRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.InstallSnapshotRequest.Data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InstallSnapshotRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.InstallSnapshotRequest.Data)
}
inline std::string* InstallSnapshotRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:RaftRpcProtoc.InstallSnapshotRequest.Data)
  return _s;
}
inline const std::string& InstallSnapshotRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void InstallSnapshotRequest::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* InstallSnapshotRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* InstallSnapshotRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:RaftRpcProtoc.InstallSnapshotRequest.Data)
  return _impl_.data_.Release();
}
inline void InstallSnapshotRequest::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:RaftRpcProtoc.InstallSnapshotRequest.Data)
}

// -------------------------------------------------------------------

// InstallSnapshotResponse

// int32 Term = 1;
inline void InstallSnapshotResponse::clear_term() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = 0;
}
inline ::int32_t InstallSnapshotResponse::term() const {
  // @@protoc_insertion_point(field_get:RaftRpcProtoc.InstallSnapshotResponse.Term)
  return _internal_term();
}
inline void InstallSnapshotResponse::set_term(::int32_t value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:RaftRpcProtoc.InstallSnapshotResponse.Term)
}
inline ::int32_t InstallSnapshotResponse::_internal_term() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.term_;
}
inline void InstallSnapshotResponse::_internal_set_term(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.term_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace RaftRpcProtoc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_raft_2eproto_2epb_2eh
